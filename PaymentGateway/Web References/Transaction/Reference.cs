//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PaymentGateway.Transaction {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TransactionSoap", Namespace="http://tempuri.org/")]
    public partial class Transaction : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback processPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrievePaymentTransactionByMerchantIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrievePaymentTransactionByTransactionIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStatusPaymentTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMerchantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBanksOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCurrenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Transaction() {
            this.Url = global::PaymentGateway.Properties.Settings.Default.PaymentGateway_Transaction_Transaction;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event processPaymentCompletedEventHandler processPaymentCompleted;
        
        /// <remarks/>
        public event retrievePaymentTransactionByMerchantIDCompletedEventHandler retrievePaymentTransactionByMerchantIDCompleted;
        
        /// <remarks/>
        public event retrievePaymentTransactionByTransactionIDCompletedEventHandler retrievePaymentTransactionByTransactionIDCompleted;
        
        /// <remarks/>
        public event UpdateStatusPaymentTransactionCompletedEventHandler UpdateStatusPaymentTransactionCompleted;
        
        /// <remarks/>
        public event getMerchantsCompletedEventHandler getMerchantsCompleted;
        
        /// <remarks/>
        public event getBanksCompletedEventHandler getBanksCompleted;
        
        /// <remarks/>
        public event getCurrenciesCompletedEventHandler getCurrenciesCompleted;
        
        /// <remarks/>
        public event getTransactionsCompletedEventHandler getTransactionsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/processPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string processPayment(string transactionID, string merchantID, string bankID, string currencyID, string cardType, string cardNumber, string nameOnCard, string expiryMonth, string expiryYear, string CVV, string amount) {
            object[] results = this.Invoke("processPayment", new object[] {
                        transactionID,
                        merchantID,
                        bankID,
                        currencyID,
                        cardType,
                        cardNumber,
                        nameOnCard,
                        expiryMonth,
                        expiryYear,
                        CVV,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void processPaymentAsync(string transactionID, string merchantID, string bankID, string currencyID, string cardType, string cardNumber, string nameOnCard, string expiryMonth, string expiryYear, string CVV, string amount) {
            this.processPaymentAsync(transactionID, merchantID, bankID, currencyID, cardType, cardNumber, nameOnCard, expiryMonth, expiryYear, CVV, amount, null);
        }
        
        /// <remarks/>
        public void processPaymentAsync(string transactionID, string merchantID, string bankID, string currencyID, string cardType, string cardNumber, string nameOnCard, string expiryMonth, string expiryYear, string CVV, string amount, object userState) {
            if ((this.processPaymentOperationCompleted == null)) {
                this.processPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprocessPaymentOperationCompleted);
            }
            this.InvokeAsync("processPayment", new object[] {
                        transactionID,
                        merchantID,
                        bankID,
                        currencyID,
                        cardType,
                        cardNumber,
                        nameOnCard,
                        expiryMonth,
                        expiryYear,
                        CVV,
                        amount}, this.processPaymentOperationCompleted, userState);
        }
        
        private void OnprocessPaymentOperationCompleted(object arg) {
            if ((this.processPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.processPaymentCompleted(this, new processPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/retrievePaymentTransactionByMerchantID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet retrievePaymentTransactionByMerchantID(string merchantID) {
            object[] results = this.Invoke("retrievePaymentTransactionByMerchantID", new object[] {
                        merchantID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void retrievePaymentTransactionByMerchantIDAsync(string merchantID) {
            this.retrievePaymentTransactionByMerchantIDAsync(merchantID, null);
        }
        
        /// <remarks/>
        public void retrievePaymentTransactionByMerchantIDAsync(string merchantID, object userState) {
            if ((this.retrievePaymentTransactionByMerchantIDOperationCompleted == null)) {
                this.retrievePaymentTransactionByMerchantIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrievePaymentTransactionByMerchantIDOperationCompleted);
            }
            this.InvokeAsync("retrievePaymentTransactionByMerchantID", new object[] {
                        merchantID}, this.retrievePaymentTransactionByMerchantIDOperationCompleted, userState);
        }
        
        private void OnretrievePaymentTransactionByMerchantIDOperationCompleted(object arg) {
            if ((this.retrievePaymentTransactionByMerchantIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrievePaymentTransactionByMerchantIDCompleted(this, new retrievePaymentTransactionByMerchantIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/retrievePaymentTransactionByTransactionID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet retrievePaymentTransactionByTransactionID(string transactionID) {
            object[] results = this.Invoke("retrievePaymentTransactionByTransactionID", new object[] {
                        transactionID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void retrievePaymentTransactionByTransactionIDAsync(string transactionID) {
            this.retrievePaymentTransactionByTransactionIDAsync(transactionID, null);
        }
        
        /// <remarks/>
        public void retrievePaymentTransactionByTransactionIDAsync(string transactionID, object userState) {
            if ((this.retrievePaymentTransactionByTransactionIDOperationCompleted == null)) {
                this.retrievePaymentTransactionByTransactionIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrievePaymentTransactionByTransactionIDOperationCompleted);
            }
            this.InvokeAsync("retrievePaymentTransactionByTransactionID", new object[] {
                        transactionID}, this.retrievePaymentTransactionByTransactionIDOperationCompleted, userState);
        }
        
        private void OnretrievePaymentTransactionByTransactionIDOperationCompleted(object arg) {
            if ((this.retrievePaymentTransactionByTransactionIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrievePaymentTransactionByTransactionIDCompleted(this, new retrievePaymentTransactionByTransactionIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStatusPaymentTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateStatusPaymentTransaction(string transactionID, string bankResponse, string status, System.Guid bankResponseID) {
            this.Invoke("UpdateStatusPaymentTransaction", new object[] {
                        transactionID,
                        bankResponse,
                        status,
                        bankResponseID});
        }
        
        /// <remarks/>
        public void UpdateStatusPaymentTransactionAsync(string transactionID, string bankResponse, string status, System.Guid bankResponseID) {
            this.UpdateStatusPaymentTransactionAsync(transactionID, bankResponse, status, bankResponseID, null);
        }
        
        /// <remarks/>
        public void UpdateStatusPaymentTransactionAsync(string transactionID, string bankResponse, string status, System.Guid bankResponseID, object userState) {
            if ((this.UpdateStatusPaymentTransactionOperationCompleted == null)) {
                this.UpdateStatusPaymentTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStatusPaymentTransactionOperationCompleted);
            }
            this.InvokeAsync("UpdateStatusPaymentTransaction", new object[] {
                        transactionID,
                        bankResponse,
                        status,
                        bankResponseID}, this.UpdateStatusPaymentTransactionOperationCompleted, userState);
        }
        
        private void OnUpdateStatusPaymentTransactionOperationCompleted(object arg) {
            if ((this.UpdateStatusPaymentTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStatusPaymentTransactionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMerchants", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getMerchants() {
            object[] results = this.Invoke("getMerchants", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getMerchantsAsync() {
            this.getMerchantsAsync(null);
        }
        
        /// <remarks/>
        public void getMerchantsAsync(object userState) {
            if ((this.getMerchantsOperationCompleted == null)) {
                this.getMerchantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMerchantsOperationCompleted);
            }
            this.InvokeAsync("getMerchants", new object[0], this.getMerchantsOperationCompleted, userState);
        }
        
        private void OngetMerchantsOperationCompleted(object arg) {
            if ((this.getMerchantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMerchantsCompleted(this, new getMerchantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getBanks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getBanks() {
            object[] results = this.Invoke("getBanks", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getBanksAsync() {
            this.getBanksAsync(null);
        }
        
        /// <remarks/>
        public void getBanksAsync(object userState) {
            if ((this.getBanksOperationCompleted == null)) {
                this.getBanksOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBanksOperationCompleted);
            }
            this.InvokeAsync("getBanks", new object[0], this.getBanksOperationCompleted, userState);
        }
        
        private void OngetBanksOperationCompleted(object arg) {
            if ((this.getBanksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBanksCompleted(this, new getBanksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCurrencies", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getCurrencies() {
            object[] results = this.Invoke("getCurrencies", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getCurrenciesAsync() {
            this.getCurrenciesAsync(null);
        }
        
        /// <remarks/>
        public void getCurrenciesAsync(object userState) {
            if ((this.getCurrenciesOperationCompleted == null)) {
                this.getCurrenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCurrenciesOperationCompleted);
            }
            this.InvokeAsync("getCurrencies", new object[0], this.getCurrenciesOperationCompleted, userState);
        }
        
        private void OngetCurrenciesOperationCompleted(object arg) {
            if ((this.getCurrenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCurrenciesCompleted(this, new getCurrenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTransactions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getTransactions() {
            object[] results = this.Invoke("getTransactions", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionsAsync() {
            this.getTransactionsAsync(null);
        }
        
        /// <remarks/>
        public void getTransactionsAsync(object userState) {
            if ((this.getTransactionsOperationCompleted == null)) {
                this.getTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionsOperationCompleted);
            }
            this.InvokeAsync("getTransactions", new object[0], this.getTransactionsOperationCompleted, userState);
        }
        
        private void OngetTransactionsOperationCompleted(object arg) {
            if ((this.getTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionsCompleted(this, new getTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void processPaymentCompletedEventHandler(object sender, processPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class processPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal processPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void retrievePaymentTransactionByMerchantIDCompletedEventHandler(object sender, retrievePaymentTransactionByMerchantIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrievePaymentTransactionByMerchantIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrievePaymentTransactionByMerchantIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void retrievePaymentTransactionByTransactionIDCompletedEventHandler(object sender, retrievePaymentTransactionByTransactionIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrievePaymentTransactionByTransactionIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrievePaymentTransactionByTransactionIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateStatusPaymentTransactionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getMerchantsCompletedEventHandler(object sender, getMerchantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMerchantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMerchantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getBanksCompletedEventHandler(object sender, getBanksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBanksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBanksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getCurrenciesCompletedEventHandler(object sender, getCurrenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCurrenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCurrenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getTransactionsCompletedEventHandler(object sender, getTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591